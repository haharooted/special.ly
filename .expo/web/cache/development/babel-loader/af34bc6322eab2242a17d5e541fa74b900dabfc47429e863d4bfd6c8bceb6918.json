{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nLogBox.ignoreLogs(['No native splash screen registered for given view controller.']);\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MapScreen from \"../app/screens/MapScreen\";\nimport TableScreen from \"../app/screens/TableScreen\";\nimport CreateEventScreen from \"../app/screens/CreateEventScreen\";\nimport FriendsScreen from \"../app/screens/FriendsScreen\";\nimport NearMeScreen from \"../app/screens/NearMeScreen\";\nimport NewEventsScreen from \"../app/screens/NewEventsScreen\";\nimport ShopScreenMap from \"../app/screens/ShopScreenMap\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Navigator = function Navigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Map') {\n              iconName = focused ? 'map' : 'map-outline';\n            } else if (route.name === 'Events') {\n              iconName = focused ? 'calendar' : 'calendar-outline';\n            } else if (route.name === 'Opret event') {\n              iconName = focused ? 'add-circle' : 'add-circle-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'Butikker') {\n              iconName = focused ? 'shopping' : 'shopping-outline';\n              return _jsx(MaterialCommunityIcons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n          tabBarStyle: [{\n            display: 'flex'\n          }, null]\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Map\",\n        component: MapScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Opret event\",\n        component: CreateEventScreen\n      }), _jsx(Tab.Screen, {\n        name: \"venner\",\n        component: FriendsScreen\n      }), _jsx(Tab.Screen, {\n        name: \"N\\xE6r mig\",\n        component: NearMeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Events\",\n        component: NewEventsScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Butikker\",\n        component: ShopScreenMap\n      })]\n    })\n  });\n};\nexport default Navigator;","map":{"version":3,"names":["React","StyleSheet","Text","SafeAreaView","NavigationContainer","createBottomTabNavigator","Ionicons","LogBox","ignoreLogs","MaterialCommunityIcons","MapScreen","TableScreen","CreateEventScreen","FriendsScreen","NearMeScreen","NewEventsScreen","ShopScreenMap","jsx","_jsx","jsxs","_jsxs","Tab","Navigator","children","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","display","Screen","component"],"sources":["/Users/jkatz/git/hvaskerder/utilities/Navigator.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, SafeAreaView } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from 'react-native-vector-icons/Ionicons'; // icons til senere\nimport { LogBox } from 'react-native';\nLogBox.ignoreLogs(['No native splash screen registered for given view controller.']);\n\n//import FoundationIcon from 'react-native-vector-icons/Foundation';\n//import Fontisto from 'react-native-vector-icons/Fontisto';\n//import Foundation from 'react-native-vector-icons/Foundation';\n//import Ionicons from 'react-native-vector-icons/Ionicons';\n//import MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n//import Octicons from 'react-native-vector-icons/Octicons';\n//import Zocial from 'react-native-vector-icons/Zocial';\n//import SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\n\n// screenz\nimport MapScreen from \"../app/screens/MapScreen\"; // \nimport TableScreen from \"../app/screens/TableScreen\"; // \nimport CreateEventScreen from \"../app/screens/CreateEventScreen\"; // \nimport FriendsScreen from \"../app/screens/FriendsScreen\"; // \nimport NearMeScreen from \"../app/screens/NearMeScreen\"; // \nimport NewEventsScreen from \"../app/screens/NewEventsScreen\"; // \nimport ShopScreenMap from \"../app/screens/ShopScreenMap\"; // \n\nconst Tab = createBottomTabNavigator();\n\nconst Navigator = () => {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === 'Map') {\n              iconName = focused ? 'map' : 'map-outline';\n            } else if (route.name === 'Events') {\n              iconName = focused ? 'calendar' : 'calendar-outline';\n            } else if (route.name === 'Opret event') {\n              iconName = focused ? 'add-circle' : 'add-circle-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'venner') {\n              iconName = focused ? 'people' : 'people-outline';\n            } else if (route.name === 'Butikker') {\n              iconName = focused ? 'shopping' : 'shopping-outline';\n              return <MaterialCommunityIcons name={iconName} size={size} color={color} />;\n            }\n            \n\n\n            // return component\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n          tabBarStyle: [\n            {\n              display: 'flex'\n            },\n            null\n          ]\n        })}\n      >\n        <Tab.Screen name=\"Map\" component={MapScreen} />\n        <Tab.Screen name=\"Opret event\" component={CreateEventScreen} />\n        <Tab.Screen name=\"venner\" component={FriendsScreen} />\n        <Tab.Screen name=\"NÃ¦r mig\" component={NearMeScreen} />\n        <Tab.Screen name=\"Events\" component={NewEventsScreen} />\n        <Tab.Screen name=\"Butikker\" component={ShopScreenMap} />\n\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default Navigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}