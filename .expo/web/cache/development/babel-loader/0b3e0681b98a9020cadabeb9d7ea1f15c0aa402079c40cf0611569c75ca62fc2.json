{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Slider from '@react-native-community/slider';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EVENTS_DATA_URL = 'https://raw.githubusercontent.com/haharooted/test/main/events.geojson';\nvar NewEventsScreen = function NewEventsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    eventsData = _useState2[0],\n    setEventsData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredEvents = _useState4[0],\n    setFilteredEvents = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sliderValue = _useState6[0],\n    setSliderValue = _useState6[1];\n  useEffect(function () {\n    var _ref;\n    var fetchEventsData = function fetchEventsData() {\n      return (_ref = _ref || _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(EVENTS_DATA_URL);\n          var data = yield response.json();\n          setEventsData(data.features);\n          setFilteredEvents(data.features);\n        } catch (error) {\n          console.error('Error fetching events data', error);\n        }\n      })).apply(this, arguments);\n    };\n    fetchEventsData();\n  }, []);\n  var filterEvents = function filterEvents(daysOffset) {\n    var baseDate = new Date(2023, 0, 1);\n    baseDate.setDate(baseDate.getDate() + daysOffset);\n    var filtered = eventsData.filter(function (event) {\n      var startDate = new Date(event.properties.parsed_date_start_0);\n      var endDate = new Date(event.properties.parsed_date_end_0);\n      return startDate <= baseDate && endDate >= baseDate;\n    });\n    setFilteredEvents(filtered);\n  };\n  var handleSliderChange = function handleSliderChange(value) {\n    setSliderValue(value);\n    filterEvents(value);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Slider, {\n      style: styles.slider,\n      minimumValue: 0,\n      maximumValue: 365,\n      step: 1,\n      value: sliderValue,\n      onValueChange: handleSliderChange\n    }), _jsx(FlatList, {\n      data: filteredEvents,\n      keyExtractor: function keyExtractor(item, index) {\n        return 'key_' + index;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.item,\n          onPress: function onPress() {\n            return console.log('Event pressed:', item);\n          },\n          children: [_jsx(Text, {\n            children: item.properties.name\n          }), _jsxs(Text, {\n            children: [\"Start: \", item.properties.parsed_date_start_0]\n          }), _jsxs(Text, {\n            children: [\"End: \", item.properties.parsed_date_end_0]\n          })]\n        });\n      }\n    }), _jsx(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: 55.67377240048718,\n        longitude: 12.541496086505862,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: filteredEvents.map(function (event, index) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: event.geometry.coordinates[1],\n            longitude: event.geometry.coordinates[0]\n          },\n          title: event.properties.name,\n          children: _jsx(Callout, {\n            children: _jsxs(View, {\n              children: [_jsx(Text, {\n                children: event.properties.name\n              }), _jsxs(Text, {\n                children: [\"Start: \", event.properties.parsed_date_start_0]\n              }), _jsxs(Text, {\n                children: [\"End: \", event.properties.parsed_date_end_0]\n              })]\n            })\n          })\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  slider: {\n    width: '100%',\n    height: 40\n  },\n  map: {\n    height: '50%',\n    width: '100%'\n  },\n  item: {\n    padding: 10,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  }\n});\nexport default NewEventsScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","FlatList","TouchableOpacity","Slider","MapView","Marker","Callout","jsx","_jsx","jsxs","_jsxs","EVENTS_DATA_URL","NewEventsScreen","_useState","_useState2","_slicedToArray","eventsData","setEventsData","_useState3","_useState4","filteredEvents","setFilteredEvents","_useState5","_useState6","sliderValue","setSliderValue","_ref","fetchEventsData","_asyncToGenerator","response","fetch","data","json","features","error","console","apply","arguments","filterEvents","daysOffset","baseDate","Date","setDate","getDate","filtered","filter","event","startDate","properties","parsed_date_start_0","endDate","parsed_date_end_0","handleSliderChange","value","style","styles","container","children","slider","minimumValue","maximumValue","step","onValueChange","keyExtractor","item","index","renderItem","_ref2","onPress","log","name","map","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","coordinate","geometry","coordinates","title","create","flex","justifyContent","alignItems","width","height","padding","borderBottomColor","borderBottomWidth"],"sources":["/Users/jkatz/git/hvaskerder/app/screens/NewEventsScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity } from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport MapView, { Marker, Callout } from 'react-native-maps';\n\nconst EVENTS_DATA_URL = 'https://raw.githubusercontent.com/haharooted/test/main/events.geojson';\n\nconst NewEventsScreen = () => {\n  const [eventsData, setEventsData] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [sliderValue, setSliderValue] = useState(0);\n\n  useEffect(() => {\n    const fetchEventsData = async () => {\n      try {\n        const response = await fetch(EVENTS_DATA_URL);\n        const data = await response.json();\n        setEventsData(data.features);\n        setFilteredEvents(data.features); // Initially display all events\n      } catch (error) {\n        console.error('Error fetching events data', error);\n      }\n    };\n\n    fetchEventsData();\n  }, []);\n\n  const filterEvents = (daysOffset) => {\n    const baseDate = new Date(2023, 0, 1); // Base date: January 1, 2023\n    baseDate.setDate(baseDate.getDate() + daysOffset);\n\n    const filtered = eventsData.filter(event => {\n      let startDate = new Date(event.properties.parsed_date_start_0);\n      let endDate = new Date(event.properties.parsed_date_end_0);\n      return startDate <= baseDate && endDate >= baseDate;\n    });\n\n    setFilteredEvents(filtered);\n  };\n\n  const handleSliderChange = (value) => {\n    setSliderValue(value);\n    filterEvents(value);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Slider\n        style={styles.slider}\n        minimumValue={0}\n        maximumValue={365} // Assuming a range of one year\n        step={1}\n        value={sliderValue}\n        onValueChange={handleSliderChange}\n      />\n      <FlatList\n        data={filteredEvents}\n        keyExtractor={(item, index) => 'key_' + index}\n        renderItem={({ item }) => (\n          <TouchableOpacity style={styles.item} onPress={() => console.log('Event pressed:', item)}>\n            <Text>{item.properties.name}</Text>\n            <Text>Start: {item.properties.parsed_date_start_0}</Text>\n            <Text>End: {item.properties.parsed_date_end_0}</Text>\n          </TouchableOpacity>\n        )}\n      />\n      <MapView\n        style={styles.map}\n        initialRegion={{\n          latitude: 55.67377240048718,\n          longitude: 12.541496086505862,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421,\n        }}\n      >\n        {filteredEvents.map((event, index) => (\n          <Marker\n            key={index}\n            coordinate={{\n              latitude: event.geometry.coordinates[1],\n              longitude: event.geometry.coordinates[0],\n            }}\n            title={event.properties.name}\n          >\n            <Callout>\n              <View>\n                <Text>{event.properties.name}</Text>\n                <Text>Start: {event.properties.parsed_date_start_0}</Text>\n                <Text>End: {event.properties.parsed_date_end_0}</Text>\n                {/* Add more information as needed */}\n              </View>\n            </Callout>\n          </Marker>\n        ))}\n      </MapView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  slider: {\n    width: '100%',\n    height: 40,\n  },\n  map: {\n    height: '50%',\n    width: '100%',\n  },\n  item: {\n    padding: 10,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default NewEventsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}